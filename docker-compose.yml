services:
  web:
    image: nginx:1
    container_name: web
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
  #certbot:
  #  image: certbot/certbot:latest
  #  container_name: certbot
  #  volumes:
  #    - ./certbot/www/:/var/www/certbot/:rw
  #    - ./certbot/conf/:/etc/letsencrypt/:rw

  api:
    image: api:1
    container_name: api
    restart: always
    depends_on: 
      - mongo
    env_file:
      - path: ./api/.env
        required: true
      - path: ./api/.env.development.local
        required: false
    environment:
      - PORT=8000
    ports:
      - 8000:8000
  
  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    volumes:
      - ./mongo/database:/data/db/:rw
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  landing:
    image: landing:1
    container_name: landing
    env_file:
      - path: ./landing/.env
        required: true
      - path: ./landing/.env.development.local
        required: false
    environment:
      - PORT=3001
    ports:
      - 3001:3001

  tool:
    image: tool:1
    container_name: tool
    env_file:
      - path: ./tool/.env
        required: true
      - path: ./tool/.env.development.local
        required: false
    environment:
      - PORT=3002
    ports:
      - 3002:3002

  wiki:
    image: wiki:1
    container_name: wiki
    volumes:
      - ./wiki/LocalSettings.php:/var/www/html/LocalSettings.php
      - ./wiki/database:/var/www/data/:rw
      - ./wiki/images:/var/www/html/images/:rw
    ports:
      - 3003:80
